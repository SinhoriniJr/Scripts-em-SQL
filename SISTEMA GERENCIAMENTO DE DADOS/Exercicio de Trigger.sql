SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBCOTACAO;
CREATE DATABASE DBCOTACAO;
USE DBCOTACAO;

CREATE TABLE COTACAO (
	IDCOTACAO INT NOT NULL AUTO_INCREMENT
    , DTCOTACAO DATE
    , VALOR NUMERIC(8,2)
    , PRIMARY KEY (IDCOTACAO)
);

CREATE TABLE PRODUTO (
	IDPRODUTO INT NOT NULL AUTO_INCREMENT
    , NOME VARCHAR(45)
    , VALOR NUMERIC(8,2)
    , PRIMARY KEY(IDPRODUTO)
);

CREATE TABLE VENDA (
	IDVENDA INT NOT NULL AUTO_INCREMENT
    , IDPRODUTO INT NOT NULL
    , DTVENDA DATE
    , VALOR_REAL NUMERIC(8,2)
    , VALOR_DOLAR NUMERIC(8,2)
    , PRIMARY KEY (IDVENDA)
    , FOREIGN KEY (IDPRODUTO) REFERENCES PRODUTO (IDPRODUTO)
);

INSERT INTO PRODUTO (NOME, VALOR)VALUES('CELULAR', 200);
INSERT INTO PRODUTO (NOME, VALOR)VALUES('TABLET', 350);

INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL -5 DAY)), 4.09 - 0.55);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL -4 DAY)), 4.09 - 0.45);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL -3 DAY)), 4.09 - 0.35);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL -2 DAY)), 4.09 - 0.25);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL -1 DAY)), 4.09 - 0.15);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL  0 DAY)), 4.09 - 0.05);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL  1 DAY)), 4.09 + 0.15);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL  2 DAY)), 4.09 + 0.25);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL  3 DAY)), 4.09 + 0.35);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL  4 DAY)), 4.09 + 0.45);
INSERT COTACAO(DTCOTACAO, VALOR)VALUES(DATE(DATE_ADD(NOW(), INTERVAL  5 DAY)), 4.09 + 0.55);


/*
QUESTÃO:
1. SÓ PODE INCLUIR VENDA, SE TIVER COTAÇÃO PARA A DATA DA VENDA

2. QUANDO UM PRODUTO FOR INCLUÍDO OU ALTERADO O VALOR DO PRODUTO 
EM DÓLAR CALCULADO COM BASE NA COTAÇÃO, PARA LOCALIZAR A COTAÇÃO COMPARE A DATA DE VENDA COM A DATA DA COTACAO;
*/

DELIMITER $$
CREATE TRIGGER TR_VENDA_BI BEFORE INSERT ON VENDA FOR EACH ROW
BEGIN
	DECLARE vVALOR NUMERIC(8,2);
    DECLARE vQTDE_COTACAO INT;
    DECLARE vVALOR_DOLAR NUMERIC(8,2);
    
    -- VERIFICANDO SE EXISTE UMA COTACAO PARA A DATA DA VENDA
    SELECT COUNT(IDCOTACAO), MAX(VALOR)
    INTO vQTDE_COTACAO, vVALOR_DOLAR
    FROM COTACAO
    WHERE DTCOTACAO = NEW.DTVENDA;
    
    IF vQTDE_COTACAO = 1 THEN		
		-- BUSCANDO O VALOR DO PRODUTO
		SELECT VALOR 
		INTO vVALOR
		FROM PRODUTO 
		WHERE IDPRODUTO = NEW.IDPRODUTO;

		SET NEW.VALOR_REAL = vVALOR;
        SET NEW.VALOR_DOLAR = vVALOR / vVALOR_DOLAR;
	ELSE
		SIGNAL SQLSTATE '45000' 
        SET MESSAGE_TEXT = 'Não existe cotação ou existem multiplas para a data informada';
    END IF;
    
END $$

CREATE TRIGGER TR_VENDA_BU BEFORE UPDATE ON VENDA FOR EACH ROW
BEGIN
	DECLARE vVALOR NUMERIC(8,2);
    DECLARE vQTDE_COTACAO INT;
    DECLARE vVALOR_DOLAR NUMERIC(8,2);
    
    -- VERIFICANDO SE EXISTE UMA COTACAO PARA A DATA DA VENDA
    SELECT COUNT(IDCOTACAO), MAX(VALOR)
    INTO vQTDE_COTACAO, vVALOR_DOLAR
    FROM COTACAO
    WHERE DTCOTACAO = NEW.DTVENDA;
    
    IF vQTDE_COTACAO = 1 THEN		
		-- BUSCANDO O VALOR DO PRODUTO
		SELECT VALOR 
		INTO vVALOR
		FROM PRODUTO 
		WHERE IDPRODUTO = NEW.IDPRODUTO;

		SET NEW.VALOR_REAL = vVALOR;
        SET NEW.VALOR_DOLAR = vVALOR / vVALOR_DOLAR;
	ELSE
		SIGNAL SQLSTATE '45000' 
        SET MESSAGE_TEXT = 'Não existe cotação ou existem multiplas para a data informada';
    END IF;
    
END $$


DELIMITER ;




INSERT INTO VENDA (DTVENDA, IDPRODUTO)VALUES('2024-10-10', 1);

SELECT * FROM VENDA;
UPDATE VENDA SET IDPRODUTO = 1;
UPDATE VENDA SET DTVENDA = '2024-10-11';
SELECT * FROM PRODUTO;
SELECT * FROM COTACAO;


