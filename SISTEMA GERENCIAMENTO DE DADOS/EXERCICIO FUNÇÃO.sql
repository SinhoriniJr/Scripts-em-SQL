SET GLOBAL LOG_BIN_TRUST_FUNCTION_CREATORS = 1;
DROP DATABASE IF EXISTS  DBEXERCICIO015;
CREATE DATABASE DBEXERCICIO015;
USE DBEXERCICIO015;

-- QUESTÃO 01
DELIMITER $$
CREATE FUNCTION FN_ADICAO(pNUMERO_1 INT, pNUMERO_2 INT) RETURNS INT
BEGIN
	DECLARE vRESULTADO INT;
    SET vRESULTADO = pNUMERO_1 +pNUMERO_2;
    RETURN vRESULTADO;
    
    -- RETURN = pNUMERO_1+pNUMERO_2;
END$$
DELIMITER ;

-- QUESTÃO 02
DELIMITER $$
CREATE FUNCTION FN_SUBTRACAO (pNUMERO_1 INT, pNUMERO_2 INT) RETURNS INT
BEGIN
	DECLARE vRESULTADO INT;
    SET vRESULTADO = pNUMERO_1 - pNUMERO_2;
    RETURN vRESULTADO;
    
    -- RETURN = pNUMERO_1+pNUMERO_2;
END$$
DELIMITER ;

-- QUESTÃO 03
DELIMITER $$
CREATE FUNCTION FN_MULTIPLICACAO(pNUMERO_1 INT, pNUMERO_2 INT) RETURNS DECIMAL
BEGIN
	DECLARE vRESULTADO DECIMAL;
    SET vRESULTADO = pNUMERO_1 * pNUMERO_2;
    RETURN vRESULTADO;
    
    -- RETURN = pNUMERO_1+pNUMERO_2;
END$$
DELIMITER ;

-- QUESTÃO 04
DELIMITER $$
CREATE FUNCTION FN_DIVISAO(pNUMERO_1 INT, pNUMERO_2 INT) RETURNS NUMERIC
BEGIN
	DECLARE vRESULTADO NUMERIC;
    SET vRESULTADO = pNUMERO_1 / pNUMERO_2;
    RETURN vRESULTADO;
    
    -- RETURN = pNUMERO_1+pNUMERO_2;
END$$
DELIMITER ;

-- QUESTÃO 05
DELIMITER $$
CREATE FUNCTION FN_CALCULADORA(pNUMERO_1 INT, pNUMERO_2 INT, pOPERADOR CHAR) RETURNS FLOAT
BEGIN
	DECLARE vRESULTADO DECIMAL;
   CASE pOPERADOR
		WHEN '+' THEN SET vRESULTADO = FN_ADICAO (pNUMERO_1, pNUMERO_2);
		WHEN '-' THEN SET vRESULTADO = FN_ADICAO (pNUMERO_1, pNUMERO_2);
		WHEN '*' THEN SET vRESULTADO = FN_ADICAO (pNUMERO_1, pNUMERO_2);
		WHEN '/' THEN SET vRESULTADO = FN_ADICAO (pNUMERO_1, pNUMERO_2);
    END CASE;
    
    RETURN vRESULTADO;
    
END$$
DELIMITER ;
SELECT FN_ADICAO(15,6);
SELECT FN_SUBTRACAO (30,2) AS SUBTRAÇÃO;
SELECT FN_MULTIPLICACAO(3,2) AS MULTIPLICAÇÃO;
SELECT FN_DIVISAO (30,5) AS DIVISÃO;
SELECT FN_CALCULADORA(5,3, '+') AS CALCULADORA;

-- QUESTÃO 06

DELIMITER $$

CREATE FUNCTION FN_PRIMO(pNUMERO INT) RETURNS BOOLEAN
BEGIN
   DECLARE RESULTADO CHAR(3);
	DECLARE CONTADOR INT;

	SET CONTADOR = NUMERO - 1;
	SET RESULTADO = 'SIM';
	
	WHILE ((CONTADOR > 1)AND(RESULTADO = 'SIM')) DO

		IF ((NUMERO % CONTADOR) = 0) THEN
			SET RESULTADO = 'NÃO';
		END IF;
		SET CONTADOR = CONTADOR - 1;
	END WHILE;
	RETURN RESULTADO;
    RETURN TRUE;
END$$
DELIMITER ;
SELECT FN_PRIMO(7);
SELECT FN_PRIMO(10);

-- QUESTÃO 07

DELIMITER $$

CREATE FUNCTION FN_IDADE(pNUMERO_1 DATE) RETURNS INT
BEGIN
	
	DECLARE pRESULTADO INT;
    SET IDADE = YEAR(NOW()) - YEAR(DT_NASCIMENTO);
	IF DATE_ADD(DT_NASCIMENTO, INTERVAL IDADE YEAR) > NOW() THEN
		SET IDADE = IDADE - 1;
	END IF;

	RETURN IDADE;
END$$
DELIMITER ;

SELECT CURDATE();
SELECT FN_IDADE('1998-05-13') AS IDADE;

-- EXERCÍCIO 8
DROP FUNCTION IF EXISTS FN_NIVER;
DELIMITER $$
CREATE FUNCTION FN_NIVER(DT_NASCIMENTO DATE) RETURNS DATE
BEGIN
	DECLARE NIVER DATE;
	DECLARE QTDE INT;

	SET QTDE = YEAR(NOW()) - YEAR(DT_NASCIMENTO);
	SET NIVER = DATE_ADD(DT_NASCIMENTO, INTERVAL QTDE YEAR);

	IF NIVER < NOW() THEN
		SET NIVER = DATE_ADD(NIVER, INTERVAL 1 YEAR);
	END IF;
	
	RETURN NIVER;
END $$
DELIMITER ;
